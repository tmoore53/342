Sat 20 Nov 2021 08:01:41 AM PST
Linux csslab6h 4.19.0-17-amd64 #1 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux
uid=1076553(tmoore53) gid=2121076553(tmoore53) groups=2121076553(tmoore53),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
0
Level: 4 -- 
Level: 3 -- 11, 
Level: 2 -- 9, 11, 21, 
Level: 1 -- 2, 7, 8, 9, 11, 21, 32, 45, 65, 
Level: 0 -- -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 21, 32, 45, 65, <-- Tail

Level: 4 -- 
Level: 3 -- 
Level: 2 -- 9, 21, 
Level: 1 -- 2, 7, 8, 9, 21, 32, -1088809856, 1795, 
Level: 0 -- -1, 1, 2, -1088809808, 1795, 

Done.
free(): double free detected in tcache 2
./create-output.sh: line 69: 10107 Aborted                 $EXEC_PROGRAM
=====================================================
3. clang-tidy warnings are fixed
=====================================================
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./main.cpp
Running clang-format on ./skiplist.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==10147== Memcheck, a memory error detector
==10147== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10147== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==10147== Command: ./a.out
==10147== Parent PID: 10078
==10147== 
==10147== Invalid read of size 4
==10147==    at 0x10ADA4: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:25)
==10147==    by 0x10A495: main (main.cpp:49)
==10147==  Address 0x4d69e20 is 0 bytes inside a block of size 40 free'd
==10147==    at 0x4836EAB: operator delete(void*) (vg_replace_malloc.c:576)
==10147==    by 0x10B911: SkipList::remove(int) (skiplist.cpp:292)
==10147==    by 0x10A46B: main (main.cpp:46)
==10147==  Block was alloc'd at
==10147==    at 0x4835DEF: operator new(unsigned long) (vg_replace_malloc.c:334)
==10147==    by 0x10B393: SkipList::goHigher(SNode*, int) (skiplist.cpp:181)
==10147==    by 0x10B330: SkipList::add(int) (skiplist.cpp:171)
==10147==    by 0x10B155: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:127)
==10147==    by 0x10A3C8: main (main.cpp:32)
==10147== 
==10147== Invalid read of size 8
==10147==    at 0x10AE27: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:29)
==10147==    by 0x10A495: main (main.cpp:49)
==10147==  Address 0x4d69e28 is 8 bytes inside a block of size 40 free'd
==10147==    at 0x4836EAB: operator delete(void*) (vg_replace_malloc.c:576)
==10147==    by 0x10B911: SkipList::remove(int) (skiplist.cpp:292)
==10147==    by 0x10A46B: main (main.cpp:46)
==10147==  Block was alloc'd at
==10147==    at 0x4835DEF: operator new(unsigned long) (vg_replace_malloc.c:334)
==10147==    by 0x10B393: SkipList::goHigher(SNode*, int) (skiplist.cpp:181)
==10147==    by 0x10B330: SkipList::add(int) (skiplist.cpp:171)
==10147==    by 0x10B155: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:127)
==10147==    by 0x10A3C8: main (main.cpp:32)
==10147== 
==10147== Invalid read of size 8
==10147==    at 0x10B6D0: SkipList::~SkipList() (skiplist.cpp:249)
==10147==    by 0x10A4E6: main (main.cpp:31)
==10147==  Address 0x4d69e28 is 8 bytes inside a block of size 40 free'd
==10147==    at 0x4836EAB: operator delete(void*) (vg_replace_malloc.c:576)
==10147==    by 0x10B911: SkipList::remove(int) (skiplist.cpp:292)
==10147==    by 0x10A46B: main (main.cpp:46)
==10147==  Block was alloc'd at
==10147==    at 0x4835DEF: operator new(unsigned long) (vg_replace_malloc.c:334)
==10147==    by 0x10B393: SkipList::goHigher(SNode*, int) (skiplist.cpp:181)
==10147==    by 0x10B330: SkipList::add(int) (skiplist.cpp:171)
==10147==    by 0x10B155: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:127)
==10147==    by 0x10A3C8: main (main.cpp:32)
==10147== 
==10147== Invalid free() / delete / delete[] / realloc()
==10147==    at 0x4836EAB: operator delete(void*) (vg_replace_malloc.c:576)
==10147==    by 0x10B6E3: SkipList::~SkipList() (skiplist.cpp:250)
==10147==    by 0x10A4E6: main (main.cpp:31)
==10147==  Address 0x4d69e20 is 0 bytes inside a block of size 40 free'd
==10147==    at 0x4836EAB: operator delete(void*) (vg_replace_malloc.c:576)
==10147==    by 0x10B911: SkipList::remove(int) (skiplist.cpp:292)
==10147==    by 0x10A46B: main (main.cpp:46)
==10147==  Block was alloc'd at
==10147==    at 0x4835DEF: operator new(unsigned long) (vg_replace_malloc.c:334)
==10147==    by 0x10B393: SkipList::goHigher(SNode*, int) (skiplist.cpp:181)
==10147==    by 0x10B330: SkipList::add(int) (skiplist.cpp:171)
==10147==    by 0x10B155: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:127)
==10147==    by 0x10A3C8: main (main.cpp:32)
==10147== 
==10147== 
==10147== HEAP SUMMARY:
==10147==     in use at exit: 0 bytes in 0 blocks
==10147==   total heap usage: 46 allocs, 48 frees, 78,528 bytes allocated
==10147== 
==10147== All heap blocks were freed -- no leaks are possible
==10147== 
==10147== For counts of detected and suppressed errors, rerun with: -v
==10147== ERROR SUMMARY: 8 errors from 4 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
./create-output.sh: line 134: ./check-code-coverage.sh: Permission denied
Sat 20 Nov 2021 08:01:52 AM PST
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================

Mon 22 Nov 2021 10:52:24 AM PST
Linux csslab11h 4.19.0-17-amd64 #1 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux
uid=1076553(tmoore53) gid=2121076553(tmoore53) groups=2121076553(tmoore53),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Level: 4 -- 9, 
Level: 3 -- 9, 
Level: 2 -- 5, 9, 
Level: 1 -- 3, 5, 7, 9, 
Level: 0 -- 1, 3, 5, 7, 9, <-- Tail

7 ? true
3 ? true
-100 ? false
100 ? false
Level: 4 -- 9, 
Level: 3 -- 9, 
Level: 2 -- 9, 
Level: 1 -- 3, 7, 9, 
Level: 0 -- 1, 3, 7, 9, <-- Tail

Test1 Done.

Level: 4 -- 9, 
Level: 3 -- 5, 8, 9, 21, 
Level: 2 -- 4, 5, 8, 9, 21, 32, 45, 
Level: 1 -- 4, 5, 8, 9, 11, 21, 32, 45, 
Level: 0 -- -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 21, 32, 45, 65, <-- Tail

75 ? false
7 ? true
./create-output.sh: line 69: 169394 Segmentation fault      $EXEC_PROGRAM
=====================================================
3. clang-tidy warnings are fixed
=====================================================
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./main.cpp
Running clang-format on ./skiplist.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
./create-output.sh: line 127: 169460 Segmentation fault      valgrind --log-file="valgrind-output.txt" $EXEC_PROGRAM > /dev/null > /dev/null
==169460== Memcheck, a memory error detector
==169460== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==169460== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==169460== Command: ./a.out
==169460== Parent PID: 169368
==169460== 
==169460== Invalid write of size 8
==169460==    at 0x10BD55: SkipList::remove(int) (skiplist.cpp:268)
==169460==    by 0x10A999: test2() (main.cpp:56)
==169460==    by 0x10AA58: main (main.cpp:71)
==169460==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==169460== 
==169460== 
==169460== Process terminating with default action of signal 11 (SIGSEGV)
==169460==  Access not within mapped region at address 0x8
==169460==    at 0x10BD55: SkipList::remove(int) (skiplist.cpp:268)
==169460==    by 0x10A999: test2() (main.cpp:56)
==169460==    by 0x10AA58: main (main.cpp:71)
==169460==  If you believe this happened as a result of a stack
==169460==  overflow in your program's main thread (unlikely but
==169460==  possible), you can try to increase the size of the
==169460==  main thread stack using the --main-stacksize= flag.
==169460==  The main thread stack size used in this run was 8388608.
==169460== 
==169460== HEAP SUMMARY:
==169460==     in use at exit: 1,328 bytes in 32 blocks
==169460==   total heap usage: 79 allocs, 47 frees, 79,688 bytes allocated
==169460== 
==169460== LEAK SUMMARY:
==169460==    definitely lost: 0 bytes in 0 blocks
==169460==    indirectly lost: 0 bytes in 0 blocks
==169460==      possibly lost: 0 bytes in 0 blocks
==169460==    still reachable: 1,328 bytes in 32 blocks
==169460==         suppressed: 0 bytes in 0 blocks
==169460== Rerun with --leak-check=full to see details of leaked memory
==169460== 
==169460== For counts of detected and suppressed errors, rerun with: -v
==169460== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
./create-output.sh: line 134: ./check-code-coverage.sh: Permission denied
Mon 22 Nov 2021 10:52:33 AM PST
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================

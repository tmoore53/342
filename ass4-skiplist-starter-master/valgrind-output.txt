==169460== Memcheck, a memory error detector
==169460== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==169460== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==169460== Command: ./a.out
==169460== Parent PID: 169368
==169460== 
==169460== Invalid write of size 8
==169460==    at 0x10BD55: SkipList::remove(int) (skiplist.cpp:268)
==169460==    by 0x10A999: test2() (main.cpp:56)
==169460==    by 0x10AA58: main (main.cpp:71)
==169460==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==169460== 
==169460== 
==169460== Process terminating with default action of signal 11 (SIGSEGV)
==169460==  Access not within mapped region at address 0x8
==169460==    at 0x10BD55: SkipList::remove(int) (skiplist.cpp:268)
==169460==    by 0x10A999: test2() (main.cpp:56)
==169460==    by 0x10AA58: main (main.cpp:71)
==169460==  If you believe this happened as a result of a stack
==169460==  overflow in your program's main thread (unlikely but
==169460==  possible), you can try to increase the size of the
==169460==  main thread stack using the --main-stacksize= flag.
==169460==  The main thread stack size used in this run was 8388608.
==169460== 
==169460== HEAP SUMMARY:
==169460==     in use at exit: 1,328 bytes in 32 blocks
==169460==   total heap usage: 79 allocs, 47 frees, 79,688 bytes allocated
==169460== 
==169460== LEAK SUMMARY:
==169460==    definitely lost: 0 bytes in 0 blocks
==169460==    indirectly lost: 0 bytes in 0 blocks
==169460==      possibly lost: 0 bytes in 0 blocks
==169460==    still reachable: 1,328 bytes in 32 blocks
==169460==         suppressed: 0 bytes in 0 blocks
==169460== Rerun with --leak-check=full to see details of leaked memory
==169460== 
==169460== For counts of detected and suppressed errors, rerun with: -v
==169460== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
